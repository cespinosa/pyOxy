# -*- mode: org -*-
#+TITLE:        pyOxy
#+AUTHOR:       Carlos Espinosa-Ponce
#+EMAIL:        cespinosa@astro.unam.mx
#+DESCRIPTION:  Readme for pyOxy repository
#+LANGUAGE:     en
#+STARTUP:      overview
#+DATE:         2021-02-05

* Description
pyOxy is a script to calculate the oxygen abundance and others physical properties with strong-lines calibrators. The result is save on a FITS file where each slice is a different property. 

Also, if EWHa is given and/or SFH cube, the resulting maps are only for star  forming  spaxels.

Emission lines:
| LinesID  |
|----------|
| Ha       |
| Hb       |
| OIII4959 |
| OIII5007 |
| NII6548  |
| OII3727  |
| NII6583  |
| SII6717  |
| SII6731  |
| SIII6312 |

Extra Labels:
| Labels ID |
|-----------|
| EWHa      |

Indices used:

| Index | Desciption                 |
|-------+----------------------------|
| R2    | OII3727/Hb                 |
| R3    | (OIII4959+OIII5007)/Hb     |
| R23   | R2+R3                      |
| O3N2  | (OIII5007/Hb)*(Ha/NII6583) |
| P     | R3/(R2+R3)                 |
| S2    | (SII6717+SII6731)/Hb       |
| N2    | (NII6548+NII6583)/Hb        |

Calibrators:

| Calibrator Label | Emission lines/Indices             | Calibration Type    | Reference                  |
|------------------+------------------------------------+---------------------+----------------------------|
| OH_Mar13_N2      | NII6548/Ha                         |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2013A%26A...559A.114M][Marino et al, 2013]]         |
| OH_Mar13_O3N2    | O3N2                               |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2013A%26A...559A.114M][Marino et al, 2013]]         |
| OH_T04           | NII6548/Ha, R23                    |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2004ApJ...613..898T][Tremonti et al, 2004]]       |
| OH_Pet04_N2_lin  | NII6548/Ha                         |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2004MNRAS.348L..59P][Pettini & Pagel, 2004]]      |
| OH_Pet04_N2_poly | NII6548/Ha                         |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2004MNRAS.348L..59P][Pettini & Pagel, 2004]]      |
| OH_Pet04_O3N2    | O3N2                               |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2004MNRAS.348L..59P][Pettini & Pagel, 2004]]      |
| OH_Kew02_N2O2    | NII6583/OII3727                    |Theoretical| [[https://ui.adsabs.harvard.edu/abs/2002ApJS..142...35K][Kewley & Dopita, 2002]]      |
| OH_Pil10_ONS     | 1.333*NII6583/Hb, R3, R2, P, S2    |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2010ApJ...720.1738P][Pilyugin et al, 2010]]       |
| OH_Pil10_ON      | 1.333*NII6583/Hb, R3, R2, S2       |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2010ApJ...720.1738P][Pilyugin et al, 2010]]       |
| OH_Pil11_NS      | 1.333*NII6583/Hb, R3, S2           |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2011MNRAS.412.1145P][Pilyugin & Mattsson, 2011]]  |
| OH_Cur20_RS32    | (SII6717+SII6731)/Ha + OIII5007/Hb |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_Cur20_R3      | OIII5007/Hb                        |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_Cur20_O3O2    | OIII5007/OII3727                   |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]         |
| OH_Cur20_S2      | (SII6717+SII6731)/Ha               |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_Cur20_N2      | (SII6717+SII6731)/Ha               |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_Cur20_R23     | R23                                |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_Cur20_O3N2    | O3N2                               |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_Cur20_O3S2    | OIII5007/((SII6717+SII6731)/Ha)    |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2020MNRAS.491..944C][Curti et al, 2020]]          |
| OH_KK04          | O23, R23, 1.333*NII6583/OII3727    |Theoretical| [[https://ui.adsabs.harvard.edu/abs/2004ApJ...617..240K][Kobulnicky & Kewley, 2004]]  |
| OH_Pil16_R       | R3, R2, N2                         |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2016MNRAS.457.3678P][Pilyugin & Grebel, 2016]]    |
| OH_Pil16_S       | R3, S2, N2                         |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2016MNRAS.457.3678P][Pilyugin & Grebel, 2016]]    |
| OH_Ho            | R2, S2, OIII5007/Hb, NII6583/Hb    |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2019MNRAS.485.3569H][Ho, 2020]]                   |
| U_Dors_O32       | O2, O3                             |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2011MNRAS.415.3616D][Dors, 2011]]                 |
| U_Dors_S         | S2                                 |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2011MNRAS.415.3616D][Dors, 2011]]                   |
| U_Mor16_O23_fs   | O2, O3      |Theoretical| [[https://ui.adsabs.harvard.edu/abs/2016A%26A...594A..37M][Morisset, 2016]]           |
| U_Mor16_O23_ts   | O2, O3     |Theoretical| [[https://ui.adsabs.harvard.edu/abs/2016A%26A...594A..37M][Morisset, 2016]]           |
| NH_Pil16_R       | R2, R3, 1.333*NII6583/Hb           |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2016MNRAS.457.3678P][Pilyugin & Grebel, 2016]]    |
| NO_Pil16_R       | NH_Pil16_R - OH_Pil16_R            |Empirical  | -------------------------  |
| NO_Pil16_Ho_R    | NH_Pil16_R - OH_Ho                 |Empirical  | -------------------------  |
| NO_Pil16_N2_R2   | R2, 1.333*NII6583/Hb,              |Empirical  | [[https://ui.adsabs.harvard.edu/abs/2011MNRAS.412.1145P][Pilyugin & Grebel, 2016]]    |
| Ne_Oster_S       | SII6717, SII6731                   |Theoretical| [[https://ui.adsabs.harvard.edu/abs/2006agna.book.....O][Osterbrock & Ferland, 2006]] |

* Requeriments:
** Ho Calibrator:
Install the Ho calibrator OxygenMLP from [[https://github.com/hoiting/OxygenMLP][Github]]

In order to use OxygenMLP, the scikit-learn v0.21.3 must be used

* How to use:
** Standalone script
getOH.py arguments:
  - inPath                Input file path
  - outPath               Output Path
  - --indexLines INDEXLINES Emission Line Indices in file
  - --indexeLines INDEXELINES Emission Line Error Indices in file
  - --lineIDs LINEIDS Emission Line Name
  - --nMC NMC MC iterations
  - --EWHaCut EWHACUT     EWHa cut value for mask if the EWHa index is given
  - --SFHCube SFHCUBE     Path of SFHCube for stellar populations filter
  - --AgeCut AGECUT       Age cut value for stellar populations mask if the SFHCube is given
  - --fyCut FYCUT         fy cut value for stellar population mask if the SFHCube index is given
  - --MaskMaps MASKMAPS   flag to save the mask maps used, 1-True, 0-False
*** Example
#+BEGIN_SRC bash
./getOH.py /data/CALIFA_DATA/dataproducts/fe_files/flux_elines.NGC5947.cube.fits.gz /home/espinosa/tmp/testOH --indexLines 45 28 27 26 47 0 46 49 50 42 198 --lineIDs Ha Hb OIII4959 OIII5007 NII6548 OII3727 NII6583 SII6717 SII6731 SIII6312 EWHa --indexeLines 249 232 231 230 251 204 250 253 246 254 --SFHCube /data/CALIFA_DATA/dataproducts/sfh_files/NGC5947.SFH.cube.fits.gz --MaskMaps 1
#+END_SRC
** Run on a Python's interpreter
Do =from getOH import main=. The arguments of main function are:
- InputPath        Input file path
- OutputPath       Output file path, e. g. /data/Oxygen.NGC5947
- indices          Indices of emission lines in fe cube
- eindices         Indices of errors associates to emission lines in fe cube
- lineIDs          Labels of emission lines, see table above
- nMC              number of MC iterations
- EWHaCut EWHACUT     EWHa cut value for mask if the EWHa index is given
- FHCube SFHCUBE     Path of SFHCube for stellar populations filter
- AgeCut AGECUT       Age cut value for stellar populations mask if the SFHCube is given
- fyCut FYCUT         fy cut value for stellar population mask if the SFHCube index is given
- MaskMaps MASKMAPS   flag to save the mask maps used, 1-True, 0-False


* Hardcode
We set a mask: NaN 7 < OH and OH > 9.5 on line 132 (deprecated)
